{
  "_from": "currency-formatter@1.5.3",
  "_id": "currency-formatter@1.5.3",
  "_inBundle": false,
  "_integrity": "sha512-1n1w3ZVnFKK0uZC0QpJk7H+QL1tKB60YRuvaAXskmiSedJVlo7k6PqKT6FZTLEo1POMDm50n4igQKXgGyruTig==",
  "_location": "/currency-formatter",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "currency-formatter",
    "fetchSpec": "1.5.3",
    "name": "currency-formatter",
    "raw": "currency-formatter@1.5.3",
    "rawSpec": "1.5.3",
    "registry": true,
    "saveSpec": null,
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/currency-formatter/-/currency-formatter-1.5.3.tgz",
  "_shasum": "e4ebdf1fac7df38acc6080d8ee5119d9d1fb831f",
  "_spec": "currency-formatter@1.5.3",
  "_where": "/Volumes/Data Drive/Projects/Dulanga/amazon-promo/amazoncore",
  "author": {
    "email": "soroush.mirzaei@gmail.com",
    "name": "Soroush Mirzaei"
  },
  "bugs": {
    "url": "https://github.com/smirzaei/currency-formatter/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "accounting": "^0.4.1",
    "locale-currency": "0.0.2",
    "object-assign": "^4.1.1"
  },
  "deprecated": false,
  "description": "A simple Javascript utility that helps you to display currency properly",
  "devDependencies": {
    "chai": "^4.1.2",
    "mocha": "^5.2.0"
  },
  "homepage": "https://github.com/smirzaei/currency-formatter#readme",
  "keywords": [
    "currency",
    "format",
    "money"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "currency-formatter",
  "optionalDependencies": {},
  "readme": "# Currency Formatter\n\n[![Build Status](https://travis-ci.org/smirzaei/currency-formatter.svg)](https://travis-ci.org/smirzaei/currency-formatter)\n\nA simple Javascript utility that helps you to display currency properly\n\nSTOP! You probably don't need this library\n=\n\n#### TL;DR: This library was created a long time ago. You should use [Internationalization API](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat) instead.\n\nPlease don't add another dependency which you don't need. All modern browsers (and node.js) have this functionality built-in and do a much better job at formatting currencies. e.g. [#57](https://github.com/smirzaei/currency-formatter/issues/57)\n\n* Browser support: https://caniuse.com/#search=intl\n* Polyfill: https://github.com/andyearnshaw/Intl.js\n* ECMA402 reference: https://tc39.github.io/ecma402/\n\nExample:\n```JS\nnew Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(100000000)\n// => \"$100,000,000.00\"\n\nnew Intl.NumberFormat('en-US', { style: 'currency', currency: 'EUR' }).format(100000000)\n// => \"€100,000,000.00\"\n\nnew Intl.NumberFormat('de-DE', { style: 'currency', currency: 'USD' }).format(100000000)\n// => \"100.000.000,00 $\"\n\nnew Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(100000000)\n// => \"100.000.000,00 €\"\n\nnew Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR' }).format(100000000)\n// => \"100 000 000,00 €\"\n```\n\nWith that being said use this library if you need:\n\n* Support old browsers.\n* Consistent formatting across all browsers.\n* You don't like the Intl APIs\n* ???\n\n\nInstall\n=\n\n```bash\nnpm install currency-formatter --save\n```\n\nBasic Usage\n=\n\nBy specifying the currency code\n\n```js\nvar currencyFormatter = require('currency-formatter');\n\ncurrencyFormatter.format(1000000, { code: 'USD' });\n// => '$1,000,000.00'\n\ncurrencyFormatter.format(1000000, { code: 'GBP' });\n// => '£1,000,000.00'\n\ncurrencyFormatter.format(1000000, { code: 'EUR' });\n// => '1 000 000,00 €'\n```\n\nOr by specifying the locale\n```js\nvar currencyFormatter = require('currency-formatter');\n\ncurrencyFormatter.format(1000000, { locale: 'en-US' });\n// => '$1,000,000.00'\n\ncurrencyFormatter.format(1000000, { locale: 'en-GB' });\n// => '£1,000,000.00'\n\ncurrencyFormatter.format(1000000, { locale: 'GB' });\n// => '£1,000,000.00'\n\ncurrencyFormatter.format(1000000, { locale: 'de-DE' });\n// => '1.000.000,00 €'\n\ncurrencyFormatter.format(1000000, { locale: 'nl-NL' });\n// => '€1.000.000,00'\n```\n\nYou can also get the currency information.\n\n```JAVASCRIPT\nvar currencyFormatter = require('currency-formatter');\n\ncurrencyFormatter.findCurrency('USD');\n// returns:\n// {\n//   code: 'USD',\n//   symbol: '$',\n//   thousandsSeparator: ',',\n//   decimalSeparator: '.',\n//   symbolOnLeft: true,\n//   spaceBetweenAmountAndSymbol: false,\n//   decimalDigits: 2\n// }\n\n```\n\nParse the number of a monetary value\n\n```js\n\ncurrencyFormatter.unformat('$10.5', { code: 'USD' })\n// => 10.5\n\ncurrencyFormatter.unformat('$1,000,000', { code: 'USD' })\n// => 1000000\n\ncurrencyFormatter.unformat('10,5 €', { code: 'EUR' })\n// => 10.5\n\ncurrencyFormatter.unformat('1 000 000,00 €', { code: 'EUR' })\n// => 1000000\n\ncurrencyFormatter.unformat('1.000,99', { locale: 'de-DE' })\n// => 1000.99\n\ncurrencyFormatter.unformat('10\\'000 CHF', { code: 'CHF' })\n// => 10000\n\ncurrencyFormatter.unformat('10.00 CHF', { code: 'CHF' })\n// => 10\n\ncurrencyFormatter.unformat('10,00 CHF', { code: 'CHF' })\n// => 1000\n\n```\n\nAdvanced Usage\n=\nCurrency Formatter uses [accounting](https://github.com/openexchangerates/accounting.js) library under the hood, and you can use its options to override the default behavior.\n\n```JAVASCRIPT\nvar currencyFormatter = require('currency-formatter');\ncurrencyFormatter.format(1000000, {\n  symbol: '@',\n  decimal: '*',\n  thousand: '^',\n  precision: 1,\n  format: '%v %s' // %s is the symbol and %v is the value\n});\n\n// => '1^000^000*0 @'\n\n// Different formatting for positive and negative values\ncurrencyFormatter.format(-10, {\n  format: {\n    pos: '%s%v' // %s is the symbol and %v is the value\n    neg: '(%s%v)',\n    zero: '%s%v'\n  }\n});\n\n// => ($10)\n```\n\nYou could also get a list of all the currencies here using one of the following:\n\n```js\nvar currencies = require('currency-formatter/currencies');\n// OR\nvar currencyFormatter = require('currency-formatter');\nvar currencies = currencyFormatter.currencies;\n```\n\nOr the currencies in hashmap shape:\n\n```js\nvar currencies = require('currency-formatter/currencies.json');\n// Result:\n// {\n//  \"USD\": {\n//    \"code\": \"USD\",\n//    \"symbol\": \"$\",\n//    \"thousandsSeparator\": \",\",\n//    \"decimalSeparator\": \".\",\n//    \"symbolOnLeft\": true,\n//    \"spaceBetweenAmountAndSymbol\": false,\n//    \"decimalDigits\": 2\n//  },\n//  ...more currencies\n// }\n```\n\nLicense\n=\n[MIT](https://github.com/smirzaei/currency-formatter/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/smirzaei/currency-formatter.git"
  },
  "scripts": {
    "test": "NODE_ENV=test mocha ./test.js --harmony"
  },
  "version": "1.5.3"
}
